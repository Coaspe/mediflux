// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model HrDoctor {
  firstName    String
  lastName     String
  middleName   String?
  dateOfBirth  DateTime
  gender       String   @default("M") @db.Char(1)
  mobileNum    String?
  email        String?
  jobTitleId   Int
  departmentId Int
  supervisorId Int?
  speciality1  String?
  speciality2  String?
  speciality3  String?
  speciality4  String?
  speciality5  String?
  lang1        String?
  lang2        String?
  lang3        String?
  exYears      Float?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  jobTitle   JobTitle    @relation(fields: [jobTitleId], references: [id])
  department Department  @relation(fields: [departmentId], references: [id])
  supervisor HrEmployee? @relation(fields: [supervisorId], references: [id])

  @@id([firstName, lastName, dateOfBirth, gender, jobTitleId])
}

model HrNurse {
  nurseId      Int      @id @default(autoincrement())
  firstName    String
  lastName     String
  middleName   String?
  dateOfBirth  DateTime
  gender       String   @db.Char(1)
  mobileNum    String?
  email        String?
  jobTitleId   Int
  departmentId Int
  supervisorId Int?
  speciality1  String?
  speciality2  String?
  speciality3  String?
  speciality4  String?
  speciality5  String?
  lang1        String?
  lang2        String?
  lang3        String?
  exYears      Float?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  jobTitle   JobTitle    @relation(fields: [jobTitleId], references: [id])
  department Department  @relation(fields: [departmentId], references: [id])
  supervisor HrEmployee? @relation(fields: [supervisorId], references: [id])

  @@unique([firstName, lastName, dateOfBirth, gender, jobTitleId])
}

model HrStaff {
  firstName    String
  lastName     String
  middleName   String?
  dateOfBirth  DateTime
  gender       String   @db.Char(1)
  mobileNum    String?
  email        String?
  jobTitleId   Int
  departmentId Int
  supervisorId Int?
  speciality1  String?
  speciality2  String?
  speciality3  String?
  speciality4  String?
  speciality5  String?
  lang1        String?
  lang2        String?
  lang3        String?
  exYears      Float?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  jobTitle   JobTitle    @relation(fields: [jobTitleId], references: [id])
  department Department  @relation(fields: [departmentId], references: [id])
  supervisor HrEmployee? @relation(fields: [supervisorId], references: [id])

  @@id([firstName, lastName, dateOfBirth, gender, jobTitleId])
}

model JobTitle {
  id        Int        @id @default(autoincrement())
  title     String
  hrNurses  HrNurse[]
  hrDoctors HrDoctor[]
  hrStaffs  HrStaff[]
}

model Department {
  id        Int        @id @default(autoincrement())
  name      String
  hrNurses  HrNurse[]
  hrDoctors HrDoctor[]
  hrStaffs  HrStaff[]
}

model HrEmployee {
  id        Int        @id @default(autoincrement())
  firstName String
  lastName  String
  hrNurses  HrNurse[]
  hrDoctors HrDoctor[]
  hrStaffs  HrStaff[]
}
